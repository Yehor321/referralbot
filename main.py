# -*- coding: utf-8 -*-
from telebot import types, TeleBot
import psycopg2, pathlib, sys, os, random

DATABASE_URL = os.getenv("DATABASE_URL")

conn = psycopg2.connect(DATABASE_URL, sslmode="require")
db = conn.cursor()

# –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–µ—Å–ª–∏ –Ω–µ—Ç)
db.execute("""
CREATE TABLE IF NOT EXISTS users (
    id BIGINT PRIMARY KEY,
    balance INT DEFAULT 0,
    referrer BIGINT
)
""")
conn.commit()

bot = TeleBot(os.getenv('BOT_TOKEN'))
admins = [5748280613, 7455363246, 768064834, 994446192, 722227070, 5091124504, 5802542911, 444818421]
path = pathlib.Path(sys.argv[0]).parent.resolve()
id_of_admin_group = -1002321750890
group = -1002308965017
crypto = 'Coming Soon.'
buttons = types.InlineKeyboardMarkup(row_width=1).add(
    types.InlineKeyboardButton('–†–µ—Ñ. —Å—Å—ã–ª–∫–∞', callback_data='ref_link'),
    types.InlineKeyboardButton('–ë–∞–ª–∞–Ω—Å', callback_data='balance'),
    types.InlineKeyboardButton(f'–í—ã–≤–µ—Å—Ç–∏ {crypto}', callback_data='vyvod')
)

money_file = path / 'money.txt'
money = int(money_file.read_text()) if money_file.exists() else 0

def cost_remake(message: types.Message):
    if not message.text:
        bot.reply_to(message, '–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É —Ç–µ–∫—Å—Ç–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.')
        bot.register_next_step_handler(message, cost_remake)
    else:
        bot.reply_to(message, '–¶–µ–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∞!')
        with open(money_file, 'w') as file:
            file.write(message.text)
            file.close()

def send_info_to_adm(message: types.Message):
    if message.text:
        bot.reply_to(message, '–ú—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –±–æ—Ç–∞.')
        db.execute('SELECT balance FROM users WHERE id = %s', (message.from_user.id,))
        balance = db.fetchone()
        if balance:
            bot.send_message(id_of_admin_group, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.full_name} ({message.from_user.id})\n–ë–∞–ª–∞–Ω—Å: {balance[0]}\n–ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞: {message.text}\n–ù–∞–ø–∏—à–∏—Ç–µ "–ø—Ä–∏–Ω—è—Ç—å" –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—ã–≤–æ–¥–µ –±–∞–ª–∞–Ω—Å–∞ –∏ –¥–ª—è —Å–±—Ä–æ—Å–∞ –µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –¥–æ 0.\n{message.from_user.id}')
    else:
        bot.reply_to(message, '–ù–∞–ø–∏—à–∏—Ç–µ –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞ –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.')
        bot.register_next_step_handler(message, send_info_to_adm)

def check_ref(msg: list):
    return msg[1] if len(msg) > 1 else None

@bot.message_handler(commands=['start'])
def start(message: types.Message):
    db.execute('SELECT * FROM users WHERE id=%s', (message.from_user.id,))
    info = db.fetchone()
    if info is None:
        ref = check_ref(message.text.split())
        db.execute('INSERT INTO users (id, balance, referrer) VALUES (%s, %s, %s)', (message.from_user.id, 0, ref))
        conn.commit()
        bot.reply_to(message, 'üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Terebonk Investors Bot!', reply_markup=buttons)
        if ref:
            try:
                ref_id = int(ref)
                db.execute('UPDATE users SET balance = balance + %s WHERE id = %s', (money, ref_id))
                conn.commit()
                bot.send_message(ref_id, f'–ü–µ—Ä–µ—á–∏—Å–ª–∏–ª–∏ –í–∞–º –¥–µ–Ω—å–≥–∏ –∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.full_name}.')
            except:
                pass
    else:
        bot.reply_to(message, 'üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Terebonk Investors Bot!', reply_markup=buttons)

@bot.message_handler(commands=['balance'])
def get_balance(message: types.Message):
    db.execute('SELECT balance FROM users WHERE id = %s', (message.from_user.id,))
    balance = db.fetchone()
    if balance:
        bot.reply_to(message, f'–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {balance[0]}')

@bot.message_handler(commands=['referral'])
def get_link_(message: types.Message):
    if bot.get_chat_member(group, message.from_user.id).status in ['left', 'kicked']:
        bot.reply_to(message, f'–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É.\n–í—Å—Ç—É–ø–∏ –≤ –≥—Ä—É–ø–ø—É @terebonka_ru –∏ –ø—Ä–∏—Ö–æ–¥–∏ —Å–Ω–æ–≤–∞!')
    else:
        bot.reply_to(message, f'–¢–≤–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: https://t.me/terebonk_referral_bot/?start={message.from_user.id}')

@bot.message_handler(commands=['adminka'])
def admin_panel(message: types.Message):
    if message.from_user.id not in admins:
        pass
    else:
        bot.reply_to(message, f'–ü—Ä–∏–≤–µ—Ç, –∞–¥–º–∏–Ω!\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ.', reply_markup=types.InlineKeyboardMarkup(row_width=1).add(types.InlineKeyboardButton('–í—ã–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö', callback_data='excel_data'), types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è', callback_data='money-cost')))

@bot.message_handler(commands=['redeem'])
def get_money_from_admins(message: types.Message):
    bot.reply_to(message, '–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞.')
    bot.register_next_step_handler(message, send_info_to_adm)

@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call: types.CallbackQuery):
    if call.data == 'balance':
        db.execute('SELECT balance FROM users WHERE id = %s', (call.from_user.id,))
        balance = db.fetchone()
        if balance:
            bot.send_message(call.message.chat.id, f'–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {balance[0]}')
    elif call.data == 'ref_link':
        if bot.get_chat_member(group, call.from_user.id).status in ['left', 'kicked']:
            bot.send_message(call.message.chat.id, f'–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É.\n–í—Å—Ç—É–ø–∏ –≤ –≥—Ä—É–ø–ø—É @terebonka_ru –∏ –ø—Ä–∏—Ö–æ–¥–∏ —Å–Ω–æ–≤–∞!')
        else:
            bot.send_message(call.message.chat.id, f'–¢–≤–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: https://t.me/terebonk_referral_bot/?start={call.from_user.id}')
    elif call.data == 'vyvod':
        bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞.')
        bot.register_next_step_handler(call.message, send_info_to_adm)
    elif call.data == 'excel_data':
        data = db.execute(f'SELECT * FROM users').fetchall()
        chislo = random.randint(1, 100000)
        file = open(path / f'{chislo}.txt', 'w')
        file.write(str(data))
        file.close()
        bot.send_document(call.message.chat.id, open(path / f'{chislo}.txt', 'rb'), caption='–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–¥.')
        os.remove(path / f'{chislo}.txt')
    elif call.data == 'money-cost':
        bot.send_message(call.message.chat.id, f'–ù–∞–ø–∏—à–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞.')
        bot.register_next_step_handler(call.message, cost_remake)
        
@bot.message_handler(content_types=['text'])
def textt(message: types.Message):
    if message.chat.id == id_of_admin_group:
        if message.reply_to_message:
            if message.reply_to_message.from_user.id == bot.get_me().id:
                if message.text.lower() == '–ø—Ä–∏–Ω—è—Ç—å':
                    id = int(message.reply_to_message.text.split()[-1])
                    bot.reply_to(message, f'–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ —Å–±—Ä–æ—Å–∏–ª–∏ –±–∞–ª–∞–Ω—Å –¥–æ 0!')
                    db.execute('UPDATE users SET balance=%s WHERE id=%s', (0, id))
                    conn.commit()
                    try:
                        bot.send_message(id, f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –≤—ã–≤–µ–ª–∏ –í–∞–º –¥–µ–Ω—å–≥–∏ –Ω–∞ –±–∞–ª–∞–Ω—Å –∫–æ—à–µ–ª—å–∫–∞. –ë–∞–ª–∞–Ω—Å –≤ –±–æ—Ç–µ –±—ã–ª —Å–±—Ä–æ—à–µ–Ω –¥–æ 0.')
                    except:
                        pass
                else:
                    pass
            else:
                pass
        else:
            pass
    else:
        pass

bot.infinity_polling()